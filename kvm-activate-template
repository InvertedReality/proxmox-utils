#!/usr/bin/env python

import os
import re
import sys
import subprocess
import logging
import optparse

from shell_utils import ShellUtils
                    
def main():
  # ---------------------------------------------------------------
  # Option handling
  # ---------------------------------------------------------------
  usage = "usage: %prog [options] <template-name> <id-to>"
  parser = optparse.OptionParser(usage)
  
  options, args = parser.parse_args()

  if not len(args) == 2:
    parser.error("Wrong number of arguments.")
  
  # ---------------------------------------------------------------
  # Grab options
  # ---------------------------------------------------------------
  template_name = args[0]
  id_to = args[1]
  
  if not id_to.isdigit():
    raise Exception("The targed id must be numeric.")

  # ---------------------------------------------------------------
  # Determine paths
  # ---------------------------------------------------------------
  path_from = "/var/lib/vz/images/t_" + template_name
  path_to = "/var/lib/vz/images/" + id_to

  # ---------------------------------------------------------------
  # Check paths
  # ---------------------------------------------------------------
  if not os.path.exists(path_from):
    raise Exception('The virtual machine template "%s" does not exist.' % template_name)

  if os.path.exists(path_to):
    raise Exception('The virtual machine "%s" already exists.' % id_to)

  # ---------------------------------------------------------------
  # Copy machine files
  # ---------------------------------------------------------------
  logging.info("Cloning machine files...")
  ShellUtils.command("cp -r %s %s" % (path_from, path_to))
  logging.info("Cloning done")
  
  # ---------------------------------------------------------------
  # Copy configuration file
  # ---------------------------------------------------------------
  logging.info("Copying configuration file...")
  ShellUtils.command("cp /etc/qemu-server/t_%s.conf /etc/qemu-server/%s.conf" % (template_name, id_to))
  logging.info("Copying done")

  # ---------------------------------------------------------------
  # Ask for editing of new file
  # ---------------------------------------------------------------
  if ShellUtils.confirm("Cloning successfully. Do you want to edit the new configuration file?", True):
    os.system("vim /etc/qemu-server/%s.conf" % id_to)
  
if __name__ == '__main__':
  try:
    ShellUtils.configure_logging()
    main()
    exit(0)
  except Exception, e:
    print e
    exit(1)